import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as l,a as n,d as s,w as t,e as u,b as e}from"./app-03692d83.js";const i={},d={class:"table-of-contents"},r=u(`<hr><h2 id="command-renamecommand" tabindex="-1"><a class="header-anchor" href="#command-renamecommand" aria-hidden="true">#</a> Command::RenameCommand</h2><h3 id="重命名命令-仅pflp插件的命令-暂不支持其他插件的命令-newcmd为空字符串则表示隐藏该cmd命令" tabindex="-1"><a class="header-anchor" href="#重命名命令-仅pflp插件的命令-暂不支持其他插件的命令-newcmd为空字符串则表示隐藏该cmd命令" aria-hidden="true">#</a> 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令)</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>cmd</td><td>string</td></tr><tr><td>newCmd</td><td>string</td></tr><tr><td colspan="2">无返回值;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) */</span>
<span class="token keyword">const</span> Command_RenameCommand <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::RenameCommand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Command_RenameCommand</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span>newCmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令)</span>
<span class="token keyword">auto</span> Command_RenameCommand <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> cmd<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> newCmd<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::RenameCommand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Command_RenameCommand</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span>newCmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令)</span>
<span class="token class-name"><span class="token keyword">var</span></span> Command_RenameCommand <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Action<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::RenameCommand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Command_RenameCommand</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span>newCmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令)</span>
<span class="token keyword">Dim</span> Command_RenameCommand <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Action<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::RenameCommand&quot;</span><span class="token punctuation">)</span>
Command_RenameCommand<span class="token punctuation">(</span>cmd<span class="token punctuation">,</span>newCmd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令)</span>
<span class="token keyword">let</span> Command_RenameCommand <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::RenameCommand&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>cmd<span class="token punctuation">,</span>newCmd<span class="token punctuation">)</span>
	<span class="token operator">|&gt;</span>Command_RenameCommand<span class="token punctuation">.</span>Invoke
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="command-executeinternalcommand" tabindex="-1"><a class="header-anchor" href="#command-executeinternalcommand" aria-hidden="true">#</a> Command::ExecuteInternalCommand</h2><h3 id="执行pflp内部命令-无视重命名-执行的是原始命令" tabindex="-1"><a class="header-anchor" href="#执行pflp内部命令-无视重命名-执行的是原始命令" aria-hidden="true">#</a> 执行pflp内部命令(无视重命名,执行的是原始命令)</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>playerXuid</td><td>string</td></tr><tr><td>cmd</td><td>string</td></tr><tr><td colspan="2">返回值类型：bool;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool */</span>
<span class="token keyword">const</span> Command_ExecuteInternalCommand <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::ExecuteInternalCommand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">Command_ExecuteInternalCommand</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool</span>
<span class="token keyword">auto</span> Command_ExecuteInternalCommand <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> cmd<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::ExecuteInternalCommand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> result <span class="token operator">=</span> <span class="token function">Command_ExecuteInternalCommand</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool</span>
<span class="token class-name"><span class="token keyword">var</span></span> Command_ExecuteInternalCommand <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::ExecuteInternalCommand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token function">Command_ExecuteInternalCommand</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool</span>
<span class="token keyword">Dim</span> Command_ExecuteInternalCommand <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Func<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::ExecuteInternalCommand&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> result <span class="token operator">=</span> Command_ExecuteInternalCommand<span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool</span>
<span class="token keyword">let</span> Command_ExecuteInternalCommand <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::ExecuteInternalCommand&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span>
	<span class="token operator">|&gt;</span>Command_ExecuteInternalCommand<span class="token punctuation">.</span>Invoke
	<span class="token operator">|&gt;</span>ignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="command-setcommanddisabled" tabindex="-1"><a class="header-anchor" href="#command-setcommanddisabled" aria-hidden="true">#</a> Command::SetCommandDisabled</h2><h3 id="设置命令禁用-可设置提示-支持任意命令" tabindex="-1"><a class="header-anchor" href="#设置命令禁用-可设置提示-支持任意命令" aria-hidden="true">#</a> 设置命令禁用(可设置提示)(支持任意命令)</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>playerXuid</td><td>string</td></tr><tr><td>cmd</td><td>string</td></tr><tr><td>feedback</td><td>string</td></tr><tr><td colspan="2">无返回值;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 设置命令禁用(可设置提示)(支持任意命令) */</span>
<span class="token keyword">const</span> Command_SetCommandDisabled <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandDisabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Command_SetCommandDisabled</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">,</span>feedback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 设置命令禁用(可设置提示)(支持任意命令)</span>
<span class="token keyword">auto</span> Command_SetCommandDisabled <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> cmd<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> feedback<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandDisabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Command_SetCommandDisabled</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">,</span>feedback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 设置命令禁用(可设置提示)(支持任意命令)</span>
<span class="token class-name"><span class="token keyword">var</span></span> Command_SetCommandDisabled <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Action<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandDisabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Command_SetCommandDisabled</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">,</span>feedback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 设置命令禁用(可设置提示)(支持任意命令)</span>
<span class="token keyword">Dim</span> Command_SetCommandDisabled <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Action<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandDisabled&quot;</span><span class="token punctuation">)</span>
Command_SetCommandDisabled<span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">,</span>feedback<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 设置命令禁用(可设置提示)(支持任意命令)</span>
<span class="token keyword">let</span> Command_SetCommandDisabled <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandDisabled&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">,</span>feedback<span class="token punctuation">)</span>
	<span class="token operator">|&gt;</span>Command_SetCommandDisabled<span class="token punctuation">.</span>Invoke
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="command-setcommandenabled" tabindex="-1"><a class="header-anchor" href="#command-setcommandenabled" aria-hidden="true">#</a> Command::SetCommandEnabled</h2><h3 id="设置命令启用" tabindex="-1"><a class="header-anchor" href="#设置命令启用" aria-hidden="true">#</a> 设置命令启用</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>playerXuid</td><td>string</td></tr><tr><td>cmd</td><td>string</td></tr><tr><td colspan="2">无返回值;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 设置命令启用 */</span>
<span class="token keyword">const</span> Command_SetCommandEnabled <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandEnabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Command_SetCommandEnabled</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 设置命令启用</span>
<span class="token keyword">auto</span> Command_SetCommandEnabled <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> cmd<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandEnabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Command_SetCommandEnabled</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 设置命令启用</span>
<span class="token class-name"><span class="token keyword">var</span></span> Command_SetCommandEnabled <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Action<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandEnabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Command_SetCommandEnabled</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 设置命令启用</span>
<span class="token keyword">Dim</span> Command_SetCommandEnabled <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Action<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandEnabled&quot;</span><span class="token punctuation">)</span>
Command_SetCommandEnabled<span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 设置命令启用</span>
<span class="token keyword">let</span> Command_SetCommandEnabled <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandEnabled&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span>
	<span class="token operator">|&gt;</span>Command_SetCommandEnabled<span class="token punctuation">.</span>Invoke
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,56);function m(k,v){const a=p("router-link");return c(),l("div",null,[n("nav",d,[n("ul",null,[n("li",null,[s(a,{to:"#command-renamecommand"},{default:t(()=>[e("Command::RenameCommand")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#重命名命令-仅pflp插件的命令-暂不支持其他插件的命令-newcmd为空字符串则表示隐藏该cmd命令"},{default:t(()=>[e("重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令)")]),_:1})])])]),n("li",null,[s(a,{to:"#command-executeinternalcommand"},{default:t(()=>[e("Command::ExecuteInternalCommand")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#执行pflp内部命令-无视重命名-执行的是原始命令"},{default:t(()=>[e("执行pflp内部命令(无视重命名,执行的是原始命令)")]),_:1})])])]),n("li",null,[s(a,{to:"#command-setcommanddisabled"},{default:t(()=>[e("Command::SetCommandDisabled")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#设置命令禁用-可设置提示-支持任意命令"},{default:t(()=>[e("设置命令禁用(可设置提示)(支持任意命令)")]),_:1})])])]),n("li",null,[s(a,{to:"#command-setcommandenabled"},{default:t(()=>[e("Command::SetCommandEnabled")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#设置命令启用"},{default:t(()=>[e("设置命令启用")]),_:1})])])])])]),r])}const C=o(i,[["render",m],["__file","Command.html.vue"]]);export{C as default};
