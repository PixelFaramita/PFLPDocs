import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as l,a as n,d as a,w as t,e as i,b as e}from"./app-05b574d6.js";const u={},d={class:"table-of-contents"},r=i(`<hr><h2 id="giftcode-getallpackname" tabindex="-1"><a class="header-anchor" href="#giftcode-getallpackname" aria-hidden="true">#</a> GiftCode::GetAllPackName</h2><h3 id="获取所有礼包的礼包名-返回json字符串数组" tabindex="-1"><a class="header-anchor" href="#获取所有礼包的礼包名-返回json字符串数组" aria-hidden="true">#</a> 获取所有礼包的礼包名（返回json字符串数组）</h3><table><tr><th>无参数;</th></tr><tr><td colspan="2">返回值类型：string;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 获取所有礼包的礼包名（返回json字符串数组） 返回值类型：string */</span>
<span class="token keyword">const</span> GiftCode_GetAllPackName <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAllPackName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">GiftCode_GetAllPackName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 获取所有礼包的礼包名（返回json字符串数组） 返回值类型：string</span>
<span class="token keyword">auto</span> GiftCode_GetAllPackName <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAllPackName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> result <span class="token operator">=</span> <span class="token function">GiftCode_GetAllPackName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 获取所有礼包的礼包名（返回json字符串数组） 返回值类型：string</span>
<span class="token class-name"><span class="token keyword">var</span></span> GiftCode_GetAllPackName <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAllPackName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token function">GiftCode_GetAllPackName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 获取所有礼包的礼包名（返回json字符串数组） 返回值类型：string</span>
<span class="token keyword">Dim</span> GiftCode_GetAllPackName <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Func<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAllPackName&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> result <span class="token operator">=</span> GiftCode_GetAllPackName<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 获取所有礼包的礼包名（返回json字符串数组） 返回值类型：string</span>
<span class="token keyword">let</span> GiftCode_GetAllPackName <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAllPackName&quot;</span><span class="token punctuation">)</span>
<span class="token function">GiftCode_GetAllPackName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token operator">|&gt;</span>ignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="giftcode-getavailablecode" tabindex="-1"><a class="header-anchor" href="#giftcode-getavailablecode" aria-hidden="true">#</a> GiftCode::GetAvailableCode</h2><h3 id="获取指定礼包的所有可用的兑换码-返回json字符串数组" tabindex="-1"><a class="header-anchor" href="#获取指定礼包的所有可用的兑换码-返回json字符串数组" aria-hidden="true">#</a> 获取指定礼包的所有可用的兑换码（返回json字符串数组）</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>packName</td><td>string</td></tr><tr><td colspan="2">返回值类型：string;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 获取指定礼包的所有可用的兑换码（返回json字符串数组） 返回值类型：string */</span>
<span class="token keyword">const</span> GiftCode_GetAvailableCode <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAvailableCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">GiftCode_GetAvailableCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 获取指定礼包的所有可用的兑换码（返回json字符串数组） 返回值类型：string</span>
<span class="token keyword">auto</span> GiftCode_GetAvailableCode <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> packName<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAvailableCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> result <span class="token operator">=</span> <span class="token function">GiftCode_GetAvailableCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 获取指定礼包的所有可用的兑换码（返回json字符串数组） 返回值类型：string</span>
<span class="token class-name"><span class="token keyword">var</span></span> GiftCode_GetAvailableCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAvailableCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token function">GiftCode_GetAvailableCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 获取指定礼包的所有可用的兑换码（返回json字符串数组） 返回值类型：string</span>
<span class="token keyword">Dim</span> GiftCode_GetAvailableCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Func<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAvailableCode&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> result <span class="token operator">=</span> GiftCode_GetAvailableCode<span class="token punctuation">(</span>packName<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 获取指定礼包的所有可用的兑换码（返回json字符串数组） 返回值类型：string</span>
<span class="token keyword">let</span> GiftCode_GetAvailableCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAvailableCode&quot;</span><span class="token punctuation">)</span>
packName
	<span class="token operator">|&gt;</span>GiftCode_GetAvailableCode<span class="token punctuation">.</span>Invoke
	<span class="token operator">|&gt;</span>ignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="giftcode-addcode" tabindex="-1"><a class="header-anchor" href="#giftcode-addcode" aria-hidden="true">#</a> GiftCode::AddCode</h2><h3 id="给指定礼包增加兑换码" tabindex="-1"><a class="header-anchor" href="#给指定礼包增加兑换码" aria-hidden="true">#</a> 给指定礼包增加兑换码</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>packName</td><td>string</td></tr><tr><td>code</td><td>string</td></tr><tr><td colspan="2">返回值类型：bool;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 给指定礼包增加兑换码 返回值类型：bool */</span>
<span class="token keyword">const</span> GiftCode_AddCode <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::AddCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">GiftCode_AddCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 给指定礼包增加兑换码 返回值类型：bool</span>
<span class="token keyword">auto</span> GiftCode_AddCode <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> packName<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> code<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::AddCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> result <span class="token operator">=</span> <span class="token function">GiftCode_AddCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 给指定礼包增加兑换码 返回值类型：bool</span>
<span class="token class-name"><span class="token keyword">var</span></span> GiftCode_AddCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::AddCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token function">GiftCode_AddCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 给指定礼包增加兑换码 返回值类型：bool</span>
<span class="token keyword">Dim</span> GiftCode_AddCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Func<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::AddCode&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> result <span class="token operator">=</span> GiftCode_AddCode<span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 给指定礼包增加兑换码 返回值类型：bool</span>
<span class="token keyword">let</span> GiftCode_AddCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::AddCode&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span>
	<span class="token operator">|&gt;</span>GiftCode_AddCode<span class="token punctuation">.</span>Invoke
	<span class="token operator">|&gt;</span>ignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="giftcode-removecode" tabindex="-1"><a class="header-anchor" href="#giftcode-removecode" aria-hidden="true">#</a> GiftCode::RemoveCode</h2><h3 id="删除指定礼包的指定兑换码" tabindex="-1"><a class="header-anchor" href="#删除指定礼包的指定兑换码" aria-hidden="true">#</a> 删除指定礼包的指定兑换码</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>packName</td><td>string</td></tr><tr><td>code</td><td>string</td></tr><tr><td colspan="2">返回值类型：bool;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 删除指定礼包的指定兑换码 返回值类型：bool */</span>
<span class="token keyword">const</span> GiftCode_RemoveCode <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::RemoveCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">GiftCode_RemoveCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 删除指定礼包的指定兑换码 返回值类型：bool</span>
<span class="token keyword">auto</span> GiftCode_RemoveCode <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> packName<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> code<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::RemoveCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> result <span class="token operator">=</span> <span class="token function">GiftCode_RemoveCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 删除指定礼包的指定兑换码 返回值类型：bool</span>
<span class="token class-name"><span class="token keyword">var</span></span> GiftCode_RemoveCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::RemoveCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token function">GiftCode_RemoveCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 删除指定礼包的指定兑换码 返回值类型：bool</span>
<span class="token keyword">Dim</span> GiftCode_RemoveCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Func<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::RemoveCode&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> result <span class="token operator">=</span> GiftCode_RemoveCode<span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 删除指定礼包的指定兑换码 返回值类型：bool</span>
<span class="token keyword">let</span> GiftCode_RemoveCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::RemoveCode&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span>
	<span class="token operator">|&gt;</span>GiftCode_RemoveCode<span class="token punctuation">.</span>Invoke
	<span class="token operator">|&gt;</span>ignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="giftcode-clearcode" tabindex="-1"><a class="header-anchor" href="#giftcode-clearcode" aria-hidden="true">#</a> GiftCode::ClearCode</h2><h3 id="删除指定礼包的所有可用的兑换码-返回json字符串数组" tabindex="-1"><a class="header-anchor" href="#删除指定礼包的所有可用的兑换码-返回json字符串数组" aria-hidden="true">#</a> 删除指定礼包的所有可用的兑换码（返回json字符串数组）</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>packName</td><td>string</td></tr><tr><td colspan="2">无返回值;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 删除指定礼包的所有可用的兑换码（返回json字符串数组） */</span>
<span class="token keyword">const</span> GiftCode_ClearCode <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::ClearCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">GiftCode_ClearCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 删除指定礼包的所有可用的兑换码（返回json字符串数组）</span>
<span class="token keyword">auto</span> GiftCode_ClearCode <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> packName<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::ClearCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">GiftCode_ClearCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 删除指定礼包的所有可用的兑换码（返回json字符串数组）</span>
<span class="token class-name"><span class="token keyword">var</span></span> GiftCode_ClearCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Action<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::ClearCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">GiftCode_ClearCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 删除指定礼包的所有可用的兑换码（返回json字符串数组）</span>
<span class="token keyword">Dim</span> GiftCode_ClearCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Action<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::ClearCode&quot;</span><span class="token punctuation">)</span>
GiftCode_ClearCode<span class="token punctuation">(</span>packName<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 删除指定礼包的所有可用的兑换码（返回json字符串数组）</span>
<span class="token keyword">let</span> GiftCode_ClearCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::ClearCode&quot;</span><span class="token punctuation">)</span>
packName
	<span class="token operator">|&gt;</span>GiftCode_ClearCode<span class="token punctuation">.</span>Invoke
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,70);function k(m,v){const s=p("router-link");return c(),l("div",null,[n("nav",d,[n("ul",null,[n("li",null,[a(s,{to:"#giftcode-getallpackname"},{default:t(()=>[e("GiftCode::GetAllPackName")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#获取所有礼包的礼包名-返回json字符串数组"},{default:t(()=>[e("获取所有礼包的礼包名（返回json字符串数组）")]),_:1})])])]),n("li",null,[a(s,{to:"#giftcode-getavailablecode"},{default:t(()=>[e("GiftCode::GetAvailableCode")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#获取指定礼包的所有可用的兑换码-返回json字符串数组"},{default:t(()=>[e("获取指定礼包的所有可用的兑换码（返回json字符串数组）")]),_:1})])])]),n("li",null,[a(s,{to:"#giftcode-addcode"},{default:t(()=>[e("GiftCode::AddCode")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#给指定礼包增加兑换码"},{default:t(()=>[e("给指定礼包增加兑换码")]),_:1})])])]),n("li",null,[a(s,{to:"#giftcode-removecode"},{default:t(()=>[e("GiftCode::RemoveCode")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#删除指定礼包的指定兑换码"},{default:t(()=>[e("删除指定礼包的指定兑换码")]),_:1})])])]),n("li",null,[a(s,{to:"#giftcode-clearcode"},{default:t(()=>[e("GiftCode::ClearCode")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#删除指定礼包的所有可用的兑换码-返回json字符串数组"},{default:t(()=>[e("删除指定礼包的所有可用的兑换码（返回json字符串数组）")]),_:1})])])])])]),r])}const C=o(u,[["render",k],["__file","GiftCode.html.vue"]]);export{C as default};
