import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,a as n,d as a,w as t,e as i,b as e}from"./app-03692d83.js";const u={},r={class:"table-of-contents"},k=i(`<hr><h2 id="teleport-startnew" tabindex="-1"><a class="header-anchor" href="#teleport-startnew" aria-hidden="true">#</a> Teleport::StartNew</h2><h3 id="开始可取消的延迟传送-可使用-pf-listen-pf-eventkey-teleportcanceled-监听取消传送" tabindex="-1"><a class="header-anchor" href="#开始可取消的延迟传送-可使用-pf-listen-pf-eventkey-teleportcanceled-监听取消传送" aria-hidden="true">#</a> 开始可取消的延迟传送，可使用<code>$pf.listen($pf.EventKey.teleportCanceled,...)</code>监听取消传送</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>playerXuid</td><td>string</td></tr><tr><td>x</td><td>float</td></tr><tr><td>y</td><td>float</td></tr><tr><td>z</td><td>float</td></tr><tr><td>dimensionId</td><td>int</td></tr><tr><td colspan="2">返回值类型：int;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 开始可取消的延迟传送，可使用\`$pf.listen($pf.EventKey.teleportCanceled,...)\`监听取消传送 返回值类型：int */</span>
<span class="token keyword">const</span> Teleport_StartNew <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::StartNew&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">Teleport_StartNew</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 开始可取消的延迟传送，可使用\`$pf.listen($pf.EventKey.teleportCanceled,...)\`监听取消传送 返回值类型：int</span>
<span class="token keyword">auto</span> Teleport_StartNew <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::StartNew&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> result <span class="token operator">=</span> <span class="token function">Teleport_StartNew</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 开始可取消的延迟传送，可使用\`$pf.listen($pf.EventKey.teleportCanceled,...)\`监听取消传送 返回值类型：int</span>
<span class="token class-name"><span class="token keyword">var</span></span> Teleport_StartNew <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">float</span><span class="token punctuation">,</span><span class="token keyword">float</span><span class="token punctuation">,</span><span class="token keyword">float</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::StartNew&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token function">Teleport_StartNew</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 开始可取消的延迟传送，可使用\`$pf.listen($pf.EventKey.teleportCanceled,...)\`监听取消传送 返回值类型：int</span>
<span class="token keyword">Dim</span> Teleport_StartNew <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Func<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">Single</span><span class="token punctuation">,</span><span class="token keyword">Single</span><span class="token punctuation">,</span><span class="token keyword">Single</span><span class="token punctuation">,</span><span class="token keyword">Integer</span><span class="token punctuation">,</span><span class="token keyword">Integer</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::StartNew&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> result <span class="token operator">=</span> Teleport_StartNew<span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 开始可取消的延迟传送，可使用\`$pf.listen($pf.EventKey.teleportCanceled,...)\`监听取消传送 返回值类型：int</span>
<span class="token keyword">let</span> Teleport_StartNew <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::StartNew&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
	<span class="token operator">|&gt;</span>Teleport_StartNew<span class="token punctuation">.</span>Invoke
	<span class="token operator">|&gt;</span>ignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="teleport-gettpastate" tabindex="-1"><a class="header-anchor" href="#teleport-gettpastate" aria-hidden="true">#</a> Teleport::GetTpaState</h2><h3 id="获取指定玩家的tpa状态-json字符串" tabindex="-1"><a class="header-anchor" href="#获取指定玩家的tpa状态-json字符串" aria-hidden="true">#</a> 获取指定玩家的Tpa状态（JSON字符串）</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>playerXuid</td><td>string</td></tr><tr><td colspan="2">返回值类型：string;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 获取指定玩家的Tpa状态（JSON字符串） 返回值类型：string */</span>
<span class="token keyword">const</span> Teleport_GetTpaState <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetTpaState&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">Teleport_GetTpaState</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 获取指定玩家的Tpa状态（JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Teleport_GetTpaState <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetTpaState&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> result <span class="token operator">=</span> <span class="token function">Teleport_GetTpaState</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 获取指定玩家的Tpa状态（JSON字符串） 返回值类型：string</span>
<span class="token class-name"><span class="token keyword">var</span></span> Teleport_GetTpaState <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetTpaState&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token function">Teleport_GetTpaState</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 获取指定玩家的Tpa状态（JSON字符串） 返回值类型：string</span>
<span class="token keyword">Dim</span> Teleport_GetTpaState <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Func<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetTpaState&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> result <span class="token operator">=</span> Teleport_GetTpaState<span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 获取指定玩家的Tpa状态（JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Teleport_GetTpaState <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetTpaState&quot;</span><span class="token punctuation">)</span>
playerXuid
	<span class="token operator">|&gt;</span>Teleport_GetTpaState<span class="token punctuation">.</span>Invoke
	<span class="token operator">|&gt;</span>ignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="teleport-gethome" tabindex="-1"><a class="header-anchor" href="#teleport-gethome" aria-hidden="true">#</a> Teleport::GetHome</h2><h3 id="获取指定玩家的home-json字符串" tabindex="-1"><a class="header-anchor" href="#获取指定玩家的home-json字符串" aria-hidden="true">#</a> 获取指定玩家的Home（JSON字符串）</h3><table><tr><th>形参</th><th>类型</th></tr><tr><td>playerXuid</td><td>string</td></tr><tr><td colspan="2">返回值类型：string;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 获取指定玩家的Home（JSON字符串） 返回值类型：string */</span>
<span class="token keyword">const</span> Teleport_GetHome <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetHome&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">Teleport_GetHome</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 获取指定玩家的Home（JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Teleport_GetHome <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetHome&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> result <span class="token operator">=</span> <span class="token function">Teleport_GetHome</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 获取指定玩家的Home（JSON字符串） 返回值类型：string</span>
<span class="token class-name"><span class="token keyword">var</span></span> Teleport_GetHome <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetHome&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token function">Teleport_GetHome</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 获取指定玩家的Home（JSON字符串） 返回值类型：string</span>
<span class="token keyword">Dim</span> Teleport_GetHome <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Func<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">,</span><span class="token keyword">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetHome&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> result <span class="token operator">=</span> Teleport_GetHome<span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 获取指定玩家的Home（JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Teleport_GetHome <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetHome&quot;</span><span class="token punctuation">)</span>
playerXuid
	<span class="token operator">|&gt;</span>Teleport_GetHome<span class="token punctuation">.</span>Invoke
	<span class="token operator">|&gt;</span>ignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="teleport-getwarp" tabindex="-1"><a class="header-anchor" href="#teleport-getwarp" aria-hidden="true">#</a> Teleport::GetWarp</h2><h3 id="获取服务器的全部传送点-json字符串" tabindex="-1"><a class="header-anchor" href="#获取服务器的全部传送点-json字符串" aria-hidden="true">#</a> 获取服务器的全部传送点（JSON字符串）</h3><table><tr><th>无参数;</th></tr><tr><td colspan="2">返回值类型：string;</td></tr></table><ul><li>JavaScript</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 获取服务器的全部传送点（JSON字符串） 返回值类型：string */</span>
<span class="token keyword">const</span> Teleport_GetWarp <span class="token operator">=</span> ll<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetWarp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">Teleport_GetWarp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C++</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 获取服务器的全部传送点（JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Teleport_GetWarp <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetWarp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> result <span class="token operator">=</span> <span class="token function">Teleport_GetWarp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>C#</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 获取服务器的全部传送点（JSON字符串） 返回值类型：string</span>
<span class="token class-name"><span class="token keyword">var</span></span> Teleport_GetWarp <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ImportAs</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetWarp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token function">Teleport_GetWarp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Visual Basic .NET</li></ul><div class="language-vb line-numbers-mode" data-ext="vb"><pre class="language-vb"><code><span class="token comment">&#39; 获取服务器的全部传送点（JSON字符串） 返回值类型：string</span>
<span class="token keyword">Dim</span> Teleport_GetWarp <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token punctuation">(</span><span class="token keyword">Of</span> Func<span class="token punctuation">(</span><span class="token keyword">Of</span> <span class="token keyword">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetWarp&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> result <span class="token operator">=</span> Teleport_GetWarp<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F#</li></ul><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token comment">// 获取服务器的全部传送点（JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Teleport_GetWarp <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetWarp&quot;</span><span class="token punctuation">)</span>
<span class="token function">Teleport_GetWarp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token operator">|&gt;</span>ignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,56);function d(m,v){const s=o("router-link");return l(),c("div",null,[n("nav",r,[n("ul",null,[n("li",null,[a(s,{to:"#teleport-startnew"},{default:t(()=>[e("Teleport::StartNew")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#开始可取消的延迟传送-可使用-pf-listen-pf-eventkey-teleportcanceled-监听取消传送"},{default:t(()=>[e("开始可取消的延迟传送，可使用$pf.listen($pf.EventKey.teleportCanceled,...)监听取消传送")]),_:1})])])]),n("li",null,[a(s,{to:"#teleport-gettpastate"},{default:t(()=>[e("Teleport::GetTpaState")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#获取指定玩家的tpa状态-json字符串"},{default:t(()=>[e("获取指定玩家的Tpa状态（JSON字符串）")]),_:1})])])]),n("li",null,[a(s,{to:"#teleport-gethome"},{default:t(()=>[e("Teleport::GetHome")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#获取指定玩家的home-json字符串"},{default:t(()=>[e("获取指定玩家的Home（JSON字符串）")]),_:1})])])]),n("li",null,[a(s,{to:"#teleport-getwarp"},{default:t(()=>[e("Teleport::GetWarp")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#获取服务器的全部传送点-json字符串"},{default:t(()=>[e("获取服务器的全部传送点（JSON字符串）")]),_:1})])])])])]),k])}const h=p(u,[["render",d],["__file","Teleport.html.vue"]]);export{h as default};
