import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as o}from"./app-05b574d6.js";const t={},p=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 设置全局配置文件（要求JSON字符串） 返回值类型：bool</span>
<span class="token keyword">auto</span> General_SetConfig <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> jsonStr<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;General::SetConfig&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取全局配置文件（JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> General_GetConfig <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;General::GetConfig&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 重新加载所有功能的配置文件</span>
<span class="token keyword">auto</span> General_Reload <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;General::Reload&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取全部IP归属地缓存（JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Location_GetAllCacheData <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Location::GetAllCacheData&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//  设置IP归属地缓存</span>
<span class="token keyword">auto</span> Location_SetIpLocation <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> ip<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> country<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> province<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> city<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> area<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> isp<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> language<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Location::SetIpLocation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 开始可取消的延迟传送，可使用\`$pf.listen($pf.EventKey.teleportCanceled,...)\`监听取消传送 返回值类型：int</span>
<span class="token keyword">auto</span> Teleport_StartNew <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::StartNew&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取指定玩家的Tpa状态（JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Teleport_GetTpaState <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetTpaState&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取指定玩家的Home（JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Teleport_GetHome <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetHome&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取服务器的全部传送点（JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Teleport_GetWarp <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetWarp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取指定玩家的统计数据（JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Statistics_GetPlayerStatistics <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Statistics::GetPlayerStatistics&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设定指定玩家的统计数据（JSON字符串）</span>
<span class="token keyword">auto</span> Statistics_SetPlayerStatistics <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> newData<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Statistics::SetPlayerStatistics&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取变量 返回值类型：string</span>
<span class="token keyword">auto</span> Format_GetVariableString <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> name<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> format<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetVariableString&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取变量，但是强制返回int类型 返回值类型：int</span>
<span class="token keyword">auto</span> Format_GetVariableInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> name<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetVariableInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取变量，但是强制返回float类型 返回值类型：float</span>
<span class="token keyword">auto</span> Format_GetVariableFloat <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> name<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetVariableFloat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string</span>
<span class="token keyword">auto</span> Format_FormatRawString <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> rawFormat<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::FormatRawString&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool</span>
<span class="token keyword">auto</span> Format_DefineFormat <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> id<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> rawFormat<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::DefineFormat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 移除格式化定义（返回true为存在并移除） 返回值类型：bool</span>
<span class="token keyword">auto</span> Format_RemoveFormat <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> id<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::RemoveFormat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string</span>
<span class="token keyword">auto</span> Format_GetFormatWithPlayer <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> id<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> extra<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetFormatWithPlayer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string</span>
<span class="token keyword">auto</span> Format_GetFormatWithPlayerLang <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> id<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerLangXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> extra<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetFormatWithPlayerLang&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string</span>
<span class="token keyword">auto</span> Format_GetFormat <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> id<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> extra<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetFormat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令)</span>
<span class="token keyword">auto</span> Command_RenameCommand <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> cmd<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> newCmd<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::RenameCommand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool</span>
<span class="token keyword">auto</span> Command_ExecuteInternalCommand <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> cmd<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::ExecuteInternalCommand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置命令禁用(可设置提示)(支持任意命令)</span>
<span class="token keyword">auto</span> Command_SetCommandDisabled <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> cmd<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> feedback<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandDisabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置命令启用</span>
<span class="token keyword">auto</span> Command_SetCommandEnabled <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> cmd<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandEnabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 翻译 返回值类型：string</span>
<span class="token keyword">auto</span> Language_Translate <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> fromLanguage<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> toLanguage<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> text<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Language::Translate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置玩家昵称</span>
<span class="token keyword">auto</span> ChatEx_SetNickName <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> nickName<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetNickName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置玩家聊天时的名字</span>
<span class="token keyword">auto</span> ChatEx_SetFakeName <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> fakeName<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetFakeName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置玩家聊天消息后缀</span>
<span class="token keyword">auto</span> ChatEx_SetEnd <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> endStr<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetEnd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置玩家聊天消息前缀</span>
<span class="token keyword">auto</span> ChatEx_SetStart <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> startStr<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetStart&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取玩家昵称 返回值类型：string</span>
<span class="token keyword">auto</span> ChatEx_GetNickName <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetNickName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取玩家聊天时的名字 返回值类型：string</span>
<span class="token keyword">auto</span> ChatEx_GetFakeName <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetFakeName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取玩家聊天消息后缀 返回值类型：string</span>
<span class="token keyword">auto</span> ChatEx_GetEnd <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetEnd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取玩家聊天消息前缀 返回值类型：string</span>
<span class="token keyword">auto</span> ChatEx_GetStart <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetStart&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 给指定方块描框</span>
<span class="token keyword">auto</span> ParticlesGraphics_DrawBlock <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> r<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> g<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> b<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> thickness<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> time<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> alpha<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ParticlesGraphics::DrawBlock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 给指定区域描框</span>
<span class="token keyword">auto</span> ParticlesGraphics_DrawBorder <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z2<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> r<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> g<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> b<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> thickness<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> time<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> alpha<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ParticlesGraphics::DrawBorder&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查指定立方体区域(float)是否有领地 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckCubeHasLand <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x1<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y1<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z1<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x2<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y2<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckCubeHasLand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查指定立方体区域(int)是否有领地 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckCubeHasLandInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckCubeHasLandInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查指定坐标(float)是否有领地 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckPosHasLand <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPosHasLand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查指定坐标(int)是否有领地 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckPosHasLandInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPosHasLandInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandByCube <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x1<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y1<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z1<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x2<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y2<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByCube&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandByCubeInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByCubeInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandByPos <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByPos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandByPosInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByPosInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandInfoByCube <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x1<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y1<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z1<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x2<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y2<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByCube&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandInfoByCubeInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByCubeInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandInfoByPos <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByPos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandInfoByPosInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByPosInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_SetLandInfoByPos <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> landinfo<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::SetLandInfoByPos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_SetLandInfoByPosInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> landinfo<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::SetLandInfoByPosInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 新建领地 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CreateLand2D <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CreateLand2D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 新建领地 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CreateLand3D <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z1<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z2<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CreateLand3D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 删除指定坐标(float)的领地 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_DeleteLandByPos <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::DeleteLandByPos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 删除指定坐标(int)的领地 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_DeleteLandByPosInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::DeleteLandByPosInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandPermissionByPos <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandPermissionByPos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandPermissionByPosInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandPermissionByPosInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckLandPermissionByPos <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> permissionId<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckLandPermissionByPos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckLandPermissionByPosInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> permissionId<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckLandPermissionByPosInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckPlayerIsLandOwnerByPos <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerIsLandOwnerByPos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckPlayerIsLandOwnerByPosInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerIsLandOwnerByPosInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckIsLandSharedToPlayerByPos <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckIsLandSharedToPlayerByPos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckIsLandSharedToPlayerByPosInt <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckIsLandSharedToPlayerByPosInt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// (请使用GetLandPermissionByPos)  检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckPlayerHasCreateChestPermission <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerHasCreateChestPermission&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// (请使用GetLandPermissionByPos)  检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_CheckPlayerHasOpenChestPermission <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> dimensionId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerHasOpenChestPermission&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 取玩家所有权限组ID（返回[&quot;id1&quot;,&quot;id2&quot;...]字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetPlayerAllPermissionGroupId <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetPlayerAllPermissionGroupId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetPlayerPermissionGroup <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> permissionGroupId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetPlayerPermissionGroup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 删玩家权限组(指定ID) 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_DeletePlayerPermissionGroup <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> permissionGroupId<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::DeletePlayerPermissionGroup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 修改家权限组内容(指定ID) 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_EditPlayerPermissionGroup <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> permissionGroupId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> jsonString<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::EditPlayerPermissionGroup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 添加权限组 返回值类型：bool</span>
<span class="token keyword">auto</span> Lands_AddPlayerPermissionGroup <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> permissionGroupId<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> jsonString<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::AddPlayerPermissionGroup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 取玩家拥有的领地 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandsOwnedByPlayer <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandsOwnedByPlayer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 取共享给玩家的领地 返回值类型：string</span>
<span class="token keyword">auto</span> Lands_GetLandsSharedToPlayer <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandsSharedToPlayer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建浮空字(给玩家发包) 返回值类型：int</span>
<span class="token keyword">auto</span> FloatText_Add <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> y<span class="token punctuation">,</span><span class="token keyword">float</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> z<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> text<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FloatText::Add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 移除浮空字(给玩家发包)</span>
<span class="token keyword">auto</span> FloatText_Remove <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> id<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FloatText::Remove&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取玩家(指定玩家Xuid)金钱 返回值类型：long</span>
<span class="token keyword">auto</span> Money_Get <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Money::Get&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 给玩家(指定玩家Xuid)加钱</span>
<span class="token keyword">auto</span> Money_Add <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> count<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> info<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Money::Add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 给玩家(指定玩家Xuid)减钱</span>
<span class="token keyword">auto</span> Money_Remove <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> playerXuid<span class="token punctuation">,</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">const</span><span class="token operator">&amp;</span> count<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> info<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Money::Remove&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取所有礼包的礼包名（返回json字符串数组） 返回值类型：string</span>
<span class="token keyword">auto</span> GiftCode_GetAllPackName <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAllPackName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取指定礼包的所有可用的兑换码（返回json字符串数组） 返回值类型：string</span>
<span class="token keyword">auto</span> GiftCode_GetAvailableCode <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> packName<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAvailableCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 给指定礼包增加兑换码 返回值类型：bool</span>
<span class="token keyword">auto</span> GiftCode_AddCode <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> packName<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> code<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::AddCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 删除指定礼包的指定兑换码 返回值类型：bool</span>
<span class="token keyword">auto</span> GiftCode_RemoveCode <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> packName<span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> code<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::RemoveCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 删除指定礼包的所有可用的兑换码（返回json字符串数组）</span>
<span class="token keyword">auto</span> GiftCode_ClearCode <span class="token operator">=</span> RemoteCall<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">importAs</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string <span class="token keyword">const</span><span class="token operator">&amp;</span> packName<span class="token punctuation">)</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::ClearCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),e=[p];function c(l,k){return s(),a("div",null,e)}const i=n(t,[["render",c],["__file","aio_cpp.html.vue"]]);export{i as default};
