import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-05b574d6.js";const p={},o=t(`<hr><details><summary>F# imports / 直接导入</summary><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token preprocessor property">#r </span><span class="token string">&quot;LiteLoader.NET&quot;</span>
<span class="token keyword">open</span> LiteLoader<span class="token punctuation">.</span>RemoteCall

<span class="token comment">// 设置全局配置文件（要求JSON字符串） 返回值类型：bool</span>
<span class="token keyword">let</span> General_SetConfig <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;General::SetConfig&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取全局配置文件（JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> General_GetConfig <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;General::GetConfig&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 重新加载所有功能的配置文件</span>
<span class="token keyword">let</span> General_Reload <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;General::Reload&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取全部IP归属地缓存（JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Location_GetAllCacheData <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Location::GetAllCacheData&quot;</span><span class="token punctuation">)</span>
<span class="token comment">//  设置IP归属地缓存</span>
<span class="token keyword">let</span> Location_SetIpLocation <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Location::SetIpLocation&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 开始可取消的延迟传送，可使用\`$pf.listen($pf.EventKey.teleportCanceled,...)\`监听取消传送 返回值类型：int</span>
<span class="token keyword">let</span> Teleport_StartNew <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::StartNew&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取指定玩家的Tpa状态（JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Teleport_GetTpaState <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetTpaState&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取指定玩家的Home（JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Teleport_GetHome <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetHome&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取服务器的全部传送点（JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Teleport_GetWarp <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetWarp&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取指定玩家的统计数据（JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Statistics_GetPlayerStatistics <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Statistics::GetPlayerStatistics&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 设定指定玩家的统计数据（JSON字符串）</span>
<span class="token keyword">let</span> Statistics_SetPlayerStatistics <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Statistics::SetPlayerStatistics&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取变量 返回值类型：string</span>
<span class="token keyword">let</span> Format_GetVariableString <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetVariableString&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取变量，但是强制返回int类型 返回值类型：int</span>
<span class="token keyword">let</span> Format_GetVariableInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>int<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetVariableInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取变量，但是强制返回float类型 返回值类型：float</span>
<span class="token keyword">let</span> Format_GetVariableFloat <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>float<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetVariableFloat&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string</span>
<span class="token keyword">let</span> Format_FormatRawString <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::FormatRawString&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool</span>
<span class="token keyword">let</span> Format_DefineFormat <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::DefineFormat&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 移除格式化定义（返回true为存在并移除） 返回值类型：bool</span>
<span class="token keyword">let</span> Format_RemoveFormat <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::RemoveFormat&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string</span>
<span class="token keyword">let</span> Format_GetFormatWithPlayer <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetFormatWithPlayer&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string</span>
<span class="token keyword">let</span> Format_GetFormatWithPlayerLang <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetFormatWithPlayerLang&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string</span>
<span class="token keyword">let</span> Format_GetFormat <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetFormat&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令)</span>
<span class="token keyword">let</span> Command_RenameCommand <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::RenameCommand&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool</span>
<span class="token keyword">let</span> Command_ExecuteInternalCommand <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::ExecuteInternalCommand&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 设置命令禁用(可设置提示)(支持任意命令)</span>
<span class="token keyword">let</span> Command_SetCommandDisabled <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandDisabled&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 设置命令启用</span>
<span class="token keyword">let</span> Command_SetCommandEnabled <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandEnabled&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 翻译 返回值类型：string</span>
<span class="token keyword">let</span> Language_Translate <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Language::Translate&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 设置玩家昵称</span>
<span class="token keyword">let</span> ChatEx_SetNickName <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetNickName&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 设置玩家聊天时的名字</span>
<span class="token keyword">let</span> ChatEx_SetFakeName <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetFakeName&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 设置玩家聊天消息后缀</span>
<span class="token keyword">let</span> ChatEx_SetEnd <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetEnd&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 设置玩家聊天消息前缀</span>
<span class="token keyword">let</span> ChatEx_SetStart <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetStart&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取玩家昵称 返回值类型：string</span>
<span class="token keyword">let</span> ChatEx_GetNickName <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetNickName&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取玩家聊天时的名字 返回值类型：string</span>
<span class="token keyword">let</span> ChatEx_GetFakeName <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetFakeName&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取玩家聊天消息后缀 返回值类型：string</span>
<span class="token keyword">let</span> ChatEx_GetEnd <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetEnd&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取玩家聊天消息前缀 返回值类型：string</span>
<span class="token keyword">let</span> ChatEx_GetStart <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetStart&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 给指定方块描框</span>
<span class="token keyword">let</span> ParticlesGraphics_DrawBlock <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ParticlesGraphics::DrawBlock&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 给指定区域描框</span>
<span class="token keyword">let</span> ParticlesGraphics_DrawBorder <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ParticlesGraphics::DrawBorder&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 检查指定立方体区域(float)是否有领地 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckCubeHasLand <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckCubeHasLand&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 检查指定立方体区域(int)是否有领地 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckCubeHasLandInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckCubeHasLandInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 检查指定坐标(float)是否有领地 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckPosHasLand <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPosHasLand&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 检查指定坐标(int)是否有领地 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckPosHasLandInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPosHasLandInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandByCube <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByCube&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandByCubeInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByCubeInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandByPos <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByPos&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandByPosInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByPosInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandInfoByCube <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByCube&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandInfoByCubeInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByCubeInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandInfoByPos <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByPos&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandInfoByPosInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByPosInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_SetLandInfoByPos <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::SetLandInfoByPos&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_SetLandInfoByPosInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::SetLandInfoByPosInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 新建领地 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CreateLand2D <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CreateLand2D&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 新建领地 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CreateLand3D <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CreateLand3D&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 删除指定坐标(float)的领地 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_DeleteLandByPos <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::DeleteLandByPos&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 删除指定坐标(int)的领地 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_DeleteLandByPosInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::DeleteLandByPosInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandPermissionByPos <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandPermissionByPos&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandPermissionByPosInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandPermissionByPosInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckLandPermissionByPos <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckLandPermissionByPos&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckLandPermissionByPosInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckLandPermissionByPosInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckPlayerIsLandOwnerByPos <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerIsLandOwnerByPos&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckPlayerIsLandOwnerByPosInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerIsLandOwnerByPosInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckIsLandSharedToPlayerByPos <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckIsLandSharedToPlayerByPos&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckIsLandSharedToPlayerByPosInt <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckIsLandSharedToPlayerByPosInt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// (请使用GetLandPermissionByPos)  检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckPlayerHasCreateChestPermission <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerHasCreateChestPermission&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// (请使用GetLandPermissionByPos)  检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_CheckPlayerHasOpenChestPermission <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerHasOpenChestPermission&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 取玩家所有权限组ID（返回[&quot;id1&quot;,&quot;id2&quot;...]字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetPlayerAllPermissionGroupId <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetPlayerAllPermissionGroupId&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetPlayerPermissionGroup <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetPlayerPermissionGroup&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 删玩家权限组(指定ID) 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_DeletePlayerPermissionGroup <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::DeletePlayerPermissionGroup&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 修改家权限组内容(指定ID) 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_EditPlayerPermissionGroup <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::EditPlayerPermissionGroup&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 添加权限组 返回值类型：bool</span>
<span class="token keyword">let</span> Lands_AddPlayerPermissionGroup <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::AddPlayerPermissionGroup&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 取玩家拥有的领地 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandsOwnedByPlayer <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandsOwnedByPlayer&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 取共享给玩家的领地 返回值类型：string</span>
<span class="token keyword">let</span> Lands_GetLandsSharedToPlayer <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandsSharedToPlayer&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 创建浮空字(给玩家发包) 返回值类型：int</span>
<span class="token keyword">let</span> FloatText_Add <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>string<span class="token punctuation">,</span>int<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FloatText::Add&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 移除浮空字(给玩家发包)</span>
<span class="token keyword">let</span> FloatText_Remove <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FloatText::Remove&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取玩家(指定玩家Xuid)金钱 返回值类型：long</span>
<span class="token keyword">let</span> Money_Get <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int64<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Money::Get&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 给玩家(指定玩家Xuid)加钱</span>
<span class="token keyword">let</span> Money_Add <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int64<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Money::Add&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 给玩家(指定玩家Xuid)减钱</span>
<span class="token keyword">let</span> Money_Remove <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int64<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Money::Remove&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取所有礼包的礼包名（返回json字符串数组） 返回值类型：string</span>
<span class="token keyword">let</span> GiftCode_GetAllPackName <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAllPackName&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取指定礼包的所有可用的兑换码（返回json字符串数组） 返回值类型：string</span>
<span class="token keyword">let</span> GiftCode_GetAvailableCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAvailableCode&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 给指定礼包增加兑换码 返回值类型：bool</span>
<span class="token keyword">let</span> GiftCode_AddCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::AddCode&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 删除指定礼包的指定兑换码 返回值类型：bool</span>
<span class="token keyword">let</span> GiftCode_RemoveCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::RemoveCode&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 删除指定礼包的所有可用的兑换码（返回json字符串数组）</span>
<span class="token keyword">let</span> GiftCode_ClearCode <span class="token operator">=</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::ClearCode&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details><summary>F# module / F# 模块类（推荐）</summary><div class="language-fsharp line-numbers-mode" data-ext="fs"><pre class="language-fsharp"><code><span class="token preprocessor property">#r </span><span class="token string">&quot;LiteLoader.NET&quot;</span>
<span class="token keyword">open</span> LiteLoader<span class="token punctuation">.</span>RemoteCall

<span class="token keyword">module</span> <span class="token keyword">public</span> PFLP <span class="token operator">=</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> General <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> General_SetConfig_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;General::SetConfig&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 设置全局配置文件（要求JSON字符串） 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetConfig</span><span class="token punctuation">(</span>jsonStr<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      General_SetConfig_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>jsonStr<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> General_GetConfig_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;General::GetConfig&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取全局配置文件（JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      General_GetConfig_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> General_Reload_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;General::Reload&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 重新加载所有功能的配置文件 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">Reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      General_Reload_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> Location <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Location_GetAllCacheData_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Location::GetAllCacheData&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取全部IP归属地缓存（JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetAllCacheData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Location_GetAllCacheData_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Location_SetIpLocation_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Location::SetIpLocation&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span>  设置IP归属地缓存 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetIpLocation</span><span class="token punctuation">(</span>ip<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>country<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>province<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>city<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>area<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>isp<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>language<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      Location_SetIpLocation_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>country<span class="token punctuation">,</span>province<span class="token punctuation">,</span>city<span class="token punctuation">,</span>area<span class="token punctuation">,</span>isp<span class="token punctuation">,</span>language<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> Teleport <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Teleport_StartNew_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::StartNew&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 开始可取消的延迟传送，可使用\`$pf.listen($pf.EventKey.teleportCanceled,...)\`监听取消传送 返回值类型：int <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">StartNew</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>int <span class="token operator">=</span>
      Teleport_StartNew_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Teleport_GetTpaState_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetTpaState&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取指定玩家的Tpa状态（JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetTpaState</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Teleport_GetTpaState_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Teleport_GetHome_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetHome&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取指定玩家的Home（JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetHome</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Teleport_GetHome_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Teleport_GetWarp_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Teleport::GetWarp&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取服务器的全部传送点（JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetWarp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Teleport_GetWarp_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> Statistics <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Statistics_GetPlayerStatistics_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Statistics::GetPlayerStatistics&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取指定玩家的统计数据（JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetPlayerStatistics</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Statistics_GetPlayerStatistics_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Statistics_SetPlayerStatistics_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Statistics::SetPlayerStatistics&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 设定指定玩家的统计数据（JSON字符串） <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetPlayerStatistics</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>newData<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      Statistics_SetPlayerStatistics_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>newData<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> Format <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Format_GetVariableString_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetVariableString&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取变量 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetVariableString</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>format<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Format_GetVariableString_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>name<span class="token punctuation">,</span>format<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Format_GetVariableInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>int<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetVariableInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取变量，但是强制返回int类型 返回值类型：int <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetVariableInt</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>int <span class="token operator">=</span>
      Format_GetVariableInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>name<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Format_GetVariableFloat_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>float<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetVariableFloat&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取变量，但是强制返回float类型 返回值类型：float <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetVariableFloat</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>float <span class="token operator">=</span>
      Format_GetVariableFloat_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>name<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Format_FormatRawString_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::FormatRawString&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">FormatRawString</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>rawFormat<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Format_FormatRawString_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>rawFormat<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Format_DefineFormat_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::DefineFormat&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">DefineFormat</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>rawFormat<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Format_DefineFormat_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>rawFormat<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Format_RemoveFormat_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::RemoveFormat&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 移除格式化定义（返回true为存在并移除） 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">RemoveFormat</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Format_RemoveFormat_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Format_GetFormatWithPlayer_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetFormatWithPlayer&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetFormatWithPlayer</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>extra<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Format_GetFormatWithPlayer_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>playerXuid<span class="token punctuation">,</span>extra<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Format_GetFormatWithPlayerLang_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetFormatWithPlayerLang&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetFormatWithPlayerLang</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerLangXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>extra<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Format_GetFormatWithPlayerLang_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>playerXuid<span class="token punctuation">,</span>playerLangXuid<span class="token punctuation">,</span>extra<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Format_GetFormat_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Format::GetFormat&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetFormat</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>extra<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Format_GetFormat_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>extra<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> Command <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Command_RenameCommand_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::RenameCommand&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">RenameCommand</span><span class="token punctuation">(</span>cmd<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>newCmd<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      Command_RenameCommand_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span>newCmd<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Command_ExecuteInternalCommand_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::ExecuteInternalCommand&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">ExecuteInternalCommand</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>cmd<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Command_ExecuteInternalCommand_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Command_SetCommandDisabled_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandDisabled&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 设置命令禁用(可设置提示)(支持任意命令) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetCommandDisabled</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>cmd<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>feedback<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      Command_SetCommandDisabled_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">,</span>feedback<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Command_SetCommandEnabled_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Command::SetCommandEnabled&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 设置命令启用 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetCommandEnabled</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>cmd<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      Command_SetCommandEnabled_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>cmd<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> Language <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Language_Translate_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Language::Translate&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 翻译 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">Translate</span><span class="token punctuation">(</span>fromLanguage<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>toLanguage<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Language_Translate_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>fromLanguage<span class="token punctuation">,</span>toLanguage<span class="token punctuation">,</span>text<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> ChatEx <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> ChatEx_SetNickName_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetNickName&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 设置玩家昵称 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetNickName</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>nickName<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      ChatEx_SetNickName_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>nickName<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> ChatEx_SetFakeName_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetFakeName&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 设置玩家聊天时的名字 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetFakeName</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>fakeName<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      ChatEx_SetFakeName_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>fakeName<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> ChatEx_SetEnd_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetEnd&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 设置玩家聊天消息后缀 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetEnd</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>endStr<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      ChatEx_SetEnd_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>endStr<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> ChatEx_SetStart_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::SetStart&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 设置玩家聊天消息前缀 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetStart</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>startStr<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      ChatEx_SetStart_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>startStr<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> ChatEx_GetNickName_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetNickName&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取玩家昵称 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetNickName</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      ChatEx_GetNickName_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> ChatEx_GetFakeName_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetFakeName&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取玩家聊天时的名字 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetFakeName</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      ChatEx_GetFakeName_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> ChatEx_GetEnd_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetEnd&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取玩家聊天消息后缀 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetEnd</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      ChatEx_GetEnd_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> ChatEx_GetStart_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatEx::GetStart&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取玩家聊天消息前缀 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetStart</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      ChatEx_GetStart_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> ParticlesGraphics <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> ParticlesGraphics_DrawBlock_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ParticlesGraphics::DrawBlock&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 给指定方块描框 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">DrawBlock</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>r<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>g<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>b<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>thickness<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>time<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>alpha<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      ParticlesGraphics_DrawBlock_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>r<span class="token punctuation">,</span>g<span class="token punctuation">,</span>b<span class="token punctuation">,</span>thickness<span class="token punctuation">,</span>time<span class="token punctuation">,</span>alpha<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> ParticlesGraphics_DrawBorder_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ParticlesGraphics::DrawBorder&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 给指定区域描框 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">DrawBorder</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>r<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>g<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>b<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>thickness<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>time<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>alpha<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      ParticlesGraphics_DrawBorder_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>z1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>z2<span class="token punctuation">,</span>r<span class="token punctuation">,</span>g<span class="token punctuation">,</span>b<span class="token punctuation">,</span>thickness<span class="token punctuation">,</span>time<span class="token punctuation">,</span>alpha<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> Lands <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckCubeHasLand_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckCubeHasLand&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 检查指定立方体区域(float)是否有领地 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckCubeHasLand</span><span class="token punctuation">(</span>x1<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y1<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z1<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z2<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckCubeHasLand_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>z1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>z2<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckCubeHasLandInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckCubeHasLandInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 检查指定立方体区域(int)是否有领地 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckCubeHasLandInt</span><span class="token punctuation">(</span>x1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckCubeHasLandInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>z1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>z2<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckPosHasLand_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPosHasLand&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 检查指定坐标(float)是否有领地 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckPosHasLand</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckPosHasLand_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckPosHasLandInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPosHasLandInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 检查指定坐标(int)是否有领地 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckPosHasLandInt</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckPosHasLandInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandByCube_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByCube&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandByCube</span><span class="token punctuation">(</span>x1<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y1<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z1<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z2<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandByCube_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>z1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>z2<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandByCubeInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByCubeInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandByCubeInt</span><span class="token punctuation">(</span>x1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandByCubeInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>z1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>z2<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandByPos_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByPos&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandByPos</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandByPos_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandByPosInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandByPosInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandByPosInt</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandByPosInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandInfoByCube_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByCube&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandInfoByCube</span><span class="token punctuation">(</span>x1<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y1<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z1<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z2<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandInfoByCube_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>z1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>z2<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandInfoByCubeInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByCubeInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandInfoByCubeInt</span><span class="token punctuation">(</span>x1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandInfoByCubeInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>z1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>z2<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandInfoByPos_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByPos&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandInfoByPos</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandInfoByPos_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandInfoByPosInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandInfoByPosInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandInfoByPosInt</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandInfoByPosInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_SetLandInfoByPos_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::SetLandInfoByPos&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetLandInfoByPos</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>landinfo<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_SetLandInfoByPos_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>landinfo<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_SetLandInfoByPosInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::SetLandInfoByPosInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">SetLandInfoByPosInt</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>landinfo<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_SetLandInfoByPosInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>landinfo<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CreateLand2D_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CreateLand2D&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 新建领地 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CreateLand2D</span><span class="token punctuation">(</span>x1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CreateLand2D_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>z1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>z2<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CreateLand3D_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CreateLand3D&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 新建领地 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CreateLand3D</span><span class="token punctuation">(</span>x1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z1<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z2<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CreateLand3D_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>z1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>z2<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_DeleteLandByPos_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::DeleteLandByPos&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 删除指定坐标(float)的领地 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">DeleteLandByPos</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_DeleteLandByPos_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_DeleteLandByPosInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::DeleteLandByPosInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 删除指定坐标(int)的领地 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">DeleteLandByPosInt</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_DeleteLandByPosInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandPermissionByPos_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandPermissionByPos&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandPermissionByPos</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandPermissionByPos_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandPermissionByPosInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandPermissionByPosInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandPermissionByPosInt</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandPermissionByPosInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckLandPermissionByPos_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckLandPermissionByPos&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckLandPermissionByPos</span><span class="token punctuation">(</span>permissionId<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckLandPermissionByPos_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>permissionId<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckLandPermissionByPosInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckLandPermissionByPosInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckLandPermissionByPosInt</span><span class="token punctuation">(</span>permissionId<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckLandPermissionByPosInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>permissionId<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckPlayerIsLandOwnerByPos_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerIsLandOwnerByPos&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckPlayerIsLandOwnerByPos</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckPlayerIsLandOwnerByPos_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckPlayerIsLandOwnerByPosInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerIsLandOwnerByPosInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckPlayerIsLandOwnerByPosInt</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckPlayerIsLandOwnerByPosInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckIsLandSharedToPlayerByPos_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckIsLandSharedToPlayerByPos&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckIsLandSharedToPlayerByPos</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckIsLandSharedToPlayerByPos_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckIsLandSharedToPlayerByPosInt_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckIsLandSharedToPlayerByPosInt&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckIsLandSharedToPlayerByPosInt</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckIsLandSharedToPlayerByPosInt_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckPlayerHasCreateChestPermission_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerHasCreateChestPermission&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> (请使用GetLandPermissionByPos)  检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckPlayerHasCreateChestPermission</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckPlayerHasCreateChestPermission_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_CheckPlayerHasOpenChestPermission_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>int<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::CheckPlayerHasOpenChestPermission&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> (请使用GetLandPermissionByPos)  检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">CheckPlayerHasOpenChestPermission</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_CheckPlayerHasOpenChestPermission_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>dimensionId<span class="token punctuation">,</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetPlayerAllPermissionGroupId_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetPlayerAllPermissionGroupId&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 取玩家所有权限组ID（返回[&quot;id1&quot;,&quot;id2&quot;...]字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetPlayerAllPermissionGroupId</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetPlayerAllPermissionGroupId_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetPlayerPermissionGroup_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetPlayerPermissionGroup&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetPlayerPermissionGroup</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>permissionGroupId<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetPlayerPermissionGroup_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>permissionGroupId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_DeletePlayerPermissionGroup_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::DeletePlayerPermissionGroup&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 删玩家权限组(指定ID) 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">DeletePlayerPermissionGroup</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>permissionGroupId<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_DeletePlayerPermissionGroup_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>permissionGroupId<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_EditPlayerPermissionGroup_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::EditPlayerPermissionGroup&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 修改家权限组内容(指定ID) 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">EditPlayerPermissionGroup</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>permissionGroupId<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_EditPlayerPermissionGroup_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>permissionGroupId<span class="token punctuation">,</span>jsonString<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_AddPlayerPermissionGroup_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::AddPlayerPermissionGroup&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 添加权限组 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">AddPlayerPermissionGroup</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>permissionGroupId<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      Lands_AddPlayerPermissionGroup_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>permissionGroupId<span class="token punctuation">,</span>jsonString<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandsOwnedByPlayer_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandsOwnedByPlayer&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 取玩家拥有的领地 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandsOwnedByPlayer</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandsOwnedByPlayer_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Lands_GetLandsSharedToPlayer_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lands::GetLandsSharedToPlayer&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 取共享给玩家的领地 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetLandsSharedToPlayer</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      Lands_GetLandsSharedToPlayer_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> FloatText <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> FloatText_Add_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>float<span class="token punctuation">,</span>string<span class="token punctuation">,</span>int<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FloatText::Add&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 创建浮空字(给玩家发包) 返回值类型：int <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">Add</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span><span class="token class-name">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>int <span class="token operator">=</span>
      FloatText_Add_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>text<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> FloatText_Remove_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FloatText::Remove&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 移除浮空字(给玩家发包) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">Remove</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span><span class="token class-name">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      FloatText_Remove_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>id<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> Money <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Money_Get_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int64<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Money::Get&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取玩家(指定玩家Xuid)金钱 返回值类型：long <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">Get</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>int64 <span class="token operator">=</span>
      Money_Get_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Money_Add_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int64<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Money::Add&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 给玩家(指定玩家Xuid)加钱 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">Add</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>count<span class="token punctuation">:</span><span class="token class-name">int64</span><span class="token punctuation">)</span><span class="token punctuation">(</span>info<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      Money_Add_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>count<span class="token punctuation">,</span>info<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> Money_Remove_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>int64<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Money::Remove&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 给玩家(指定玩家Xuid)减钱 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">Remove</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>count<span class="token punctuation">:</span><span class="token class-name">int64</span><span class="token punctuation">)</span><span class="token punctuation">(</span>info<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      Money_Remove_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>playerXuid<span class="token punctuation">,</span>count<span class="token punctuation">,</span>info<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> GiftCode <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> GiftCode_GetAllPackName_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAllPackName&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取所有礼包的礼包名（返回json字符串数组） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetAllPackName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      GiftCode_GetAllPackName_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> GiftCode_GetAvailableCode_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::GetAvailableCode&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 获取指定礼包的所有可用的兑换码（返回json字符串数组） 返回值类型：string <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">GetAvailableCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>string <span class="token operator">=</span>
      GiftCode_GetAvailableCode_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>packName<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> GiftCode_AddCode_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::AddCode&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 给指定礼包增加兑换码 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">AddCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>code<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      GiftCode_AddCode_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> GiftCode_RemoveCode_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Func<span class="token operator">&lt;</span>string<span class="token punctuation">,</span>string<span class="token punctuation">,</span>bool<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::RemoveCode&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 删除指定礼包的指定兑换码 返回值类型：bool <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">RemoveCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>code<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bool <span class="token operator">=</span>
      GiftCode_RemoveCode_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>packName<span class="token punctuation">,</span>code<span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token keyword">private</span> GiftCode_ClearCode_instance <span class="token operator">=</span> <span class="token keyword">lazy</span> RemoteCallAPI<span class="token punctuation">.</span>ImportAs<span class="token operator">&lt;</span>Action<span class="token operator">&lt;</span>string<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;PFLP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GiftCode::ClearCode&quot;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 删除指定礼包的所有可用的兑换码（返回json字符串数组） <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">let</span> <span class="token keyword">public</span> <span class="token function">ClearCode</span><span class="token punctuation">(</span>packName<span class="token punctuation">:</span><span class="token class-name">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span>unit <span class="token operator">=</span>
      GiftCode_ClearCode_instance<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>packName<span class="token punctuation">)</span>
  <span class="token keyword">module</span> <span class="token keyword">public</span> Internal <span class="token operator">=</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><hr>`,4),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","aio_fs.html.vue"]]);export{r as default};
