import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as l,a as n,b as a,d as s,e as t}from"./app-05b574d6.js";const c="/assets/natfrp1-eb12d773.png",p="/assets/natfrp2-b3c19525.png",d={},u=t(`<h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;FrpClient&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;ModuleEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">//覆盖LL的获取IP接口，开启方可让所有使用了LL接口的插件获取到真实IP</span>
    <span class="token property">&quot;OverrideLLGetIp&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">//FRP的配置文件</span>
    <span class="token property">&quot;FrpConfigs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;~\\\\frpc.ini&quot;</span><span class="token punctuation">,</span><span class="token comment">//~开头表示插件目录，即PFLP的config.json所在目录</span>
        <span class="token string">&quot;frpc2.ini&quot;</span><span class="token comment">//不加~表示BDS目录，即[BDS]\\frpc2.ini</span>
        <span class="token comment">//可以多开frp</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><h3 id="自行搭建的服务" tabindex="-1"><a class="header-anchor" href="#自行搭建的服务" aria-hidden="true">#</a> 自行搭建的服务</h3><p>如自行搭建的 frp 服务器地址为<code>frp.example.com</code>，端口为<code>7000</code>，则配置文件<code>frpc.ini</code>如下：</p>`,5),h={href:"https://gofrp.org/docs/features/tcp-udp/",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">common</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">server_addr</span> <span class="token punctuation">=</span> <span class="token value attr-value">frp.example.com</span>
<span class="token key attr-name">server_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">7000</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">mc19132</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">udp</span>
<span class="token key attr-name">local_ip</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span>
<span class="token key attr-name">local_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">19132</span>
<span class="token key attr-name">remote_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">11451</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用第三方服务" tabindex="-1"><a class="header-anchor" href="#使用第三方服务" aria-hidden="true">#</a> 使用第三方服务</h3>`,2),v={href:"https://github.com/fatedier/frp",target:"_blank",rel:"noopener noreferrer"},f=n("li",null,[n("h5",{id:"点击配置文件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#点击配置文件","aria-hidden":"true"},"#"),a(" 点击配置文件")])],-1),k=t('<figure><img src="'+c+'" alt="SakuraFrp 查看配置" tabindex="0" loading="lazy"><figcaption>SakuraFrp 查看配置</figcaption></figure><ul><li><h5 id="下载配置frpc-ini" tabindex="-1"><a class="header-anchor" href="#下载配置frpc-ini" aria-hidden="true">#</a> 下载配置<code>frpc.ini</code></h5></li></ul><figure><img src="'+p+`" alt="SakuraFrp 下载配置" tabindex="0" loading="lazy"><figcaption>SakuraFrp 下载配置</figcaption></figure><ul><li><h5 id="修改配置文件" tabindex="-1"><a class="header-anchor" href="#修改配置文件" aria-hidden="true">#</a> 修改配置文件</h5><ul><li>将下载到的<code>frpc_xxx.ini</code>放到合适目录，如：<code>[BDS]\\plugins\\PXBANALuminousPolymerization\\frpc_xxx.ini</code></li><li>在 pflp 的 <code>config.json</code>对应项<code>FrpConfigs</code>添加对应配置，如：<code>&quot;~\\\\frpc_xxx.ini&quot;</code></li><li>控制台输入<code>pflp reload</code>重载，即可运行</li></ul></li></ul><h2 id="插件对接" tabindex="-1"><a class="header-anchor" href="#插件对接" aria-hidden="true">#</a> 插件对接？？？</h2><p>只要使用了 LL 接口的插件，不需要专门对接，只要在配置文件开启以下选项即可，其他插件调用 LL 的接口即可获取到真实 IP</p><ul><li>c++ <code>Player::getIP()</code></li><li>c++ <code>NetworkIdentifier::getIP()</code></li><li>js <code>player.ip</code></li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>    <span class="token comment">//覆盖LL的获取IP接口，开启方可让所有使用了LL接口的插件获取到真实IP</span>
    <span class="token property">&quot;OverrideLLGetIp&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开源库使用" tabindex="-1"><a class="header-anchor" href="#开源库使用" aria-hidden="true">#</a> 开源库使用</h2>`,9),b={href:"https://github.com/fatedier/frp",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/LazuliKao/frp",target:"_blank",rel:"noopener noreferrer"},g=n("h2",{id:"实现原理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#实现原理","aria-hidden":"true"},"#"),a(" 实现原理")],-1),x=n("ul",null,[n("li",null,"frpc 客户端连接 frps 服务器后，服务端会将连接的 IP 传到 frpc，frpc 将 ip 与内网 ip 存表，故仅需修改客户端即可导出链接真实 IP"),n("li",null,"本插件内置的 frpc 有所改动，方可在 BDS 直接获取到真实 IP，如需参考请打开上文的分支链接")],-1);function L(y,q){const e=i("ExternalLinkIcon");return r(),l("div",null,[u,n("p",null,[n("a",h,[a("frp 配置文件格式"),s(e)])]),m,n("ul",null,[n("li",null,[a("这里 SakuraFrp 举例，其他使用"),n("a",v,[a("frp"),s(e)]),a("的服务商同理")]),f]),k,n("ul",null,[n("li",null,[n("p",null,[n("a",b,[a("frp repo"),s(e)])])]),n("li",null,[n("p",null,[n("a",_,[a("本插件内置的修改后的分支 repo"),s(e)])])])]),g,x])}const F=o(d,[["render",L],["__file","frpc.html.vue"]]);export{F as default};
